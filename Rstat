#we download the packages
list.of.packages <- c("FactoMineR","factoextra")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)){
   install.packages(new.packages)
}

library(DESeq2)
library(FactoMineR)
library(factoextra)

#Clean the workspace
rm(list = ls())

###we construct a gene count table

#we create a small "col" data frame with sra as row name and Group as only column
#for genecount table, we take the inputs, ignore the first row, and only select the first column and last column (header=T)
#cbind
#transpose
#cbind genecount and group data frame


###PCA

#we run the PCA
resPCA <- PCA(genecount[ , ! colnames(genecount) %in% c("Group")], scale.unit = TRUE, ncp = 5, graph = TRUE)
#save for output?
fviz_pca_ind (resPCA,label="none",habillage= as.factor(genecount$Group), addEllipses = T, pointsize=5) + theme( axis.title = element_text(size = 15),axis.text = element_text(size = 15))
#save for output?

###DESeq

#we create a metadata (col) table for deseq2
col <- cbind(as.data.frame(genecount[,length(genecount)]), rownames(genecount))
names(col) <- c("Group", "indiv")

#we adjust the genecount table
genecount <- genecount[ , ! colnames(genecount) %in% c("Group")]
genecount <- as.data.frame(t(genecount))


#we run DESeq2
de <- DESeqDataSetFromMatrix(genecount, col, design= ~Group )
de <- DESeq(de)
result <- results(de, alpha = 0.05, lfcThreshold = 1, independentFiltering= F)
summary(result)
res <- as.data.frame(result)
#save for output?

#we filter the results
res <- subset(res, res$log2FoldChange > 1 | res$log2FoldChange <(-1))
res <- subset(res, res$padj < 0.1)
res <- na.omit(res)

#graphic representation
EnhancedVolcano(result,lab = rownames(result),
                x = 'log2FoldChange',
                y = 'pvalue')
#save for output?
